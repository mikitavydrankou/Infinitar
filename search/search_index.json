{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"KNSI \"Czarna Magia\"","text":"<ul> <li>use markdown (docs)</li> </ul>"},{"location":"#test","title":"TEST","text":"<p>Advertisement :)</p> <ul> <li>pica - high quality and fast image     resize in browser.</li> <li>babelfish - developer friendly     i18n with plurals support and easy syntax.</li> </ul> <p>You will like those projects!</p>"},{"location":"#h1-heading-8-","title":"h1 Heading 8-)","text":""},{"location":"#h2-heading","title":"h2 Heading","text":""},{"location":"#h3-heading","title":"h3 Heading","text":""},{"location":"#h4-heading","title":"h4 Heading","text":""},{"location":"#h5-heading","title":"h5 Heading","text":""},{"location":"#h6-heading","title":"h6 Heading","text":""},{"location":"#horizontal-rules","title":"Horizontal Rules","text":""},{"location":"#typographic-replacements","title":"Typographic replacements","text":"<p>Enable typographer option to see result.</p> <p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p> <p>test.. test... test..... test?..... test!....</p> <p>!!!!!! ???? ,, -- ---</p> <p>\"Smartypants, double quotes\" and 'single quotes'</p>"},{"location":"#emphasis","title":"Emphasis","text":"<p>This is bold text</p> <p>This is bold text</p> <p>This is italic text</p> <p>This is italic text</p> <p>~~Strikethrough~~</p>"},{"location":"#blockquotes","title":"Blockquotes","text":"<p>Blockquotes can also be nested...</p> <p>...by using additional greater-than signs right next to each other...</p> <p>...or with spaces between arrows.</p>"},{"location":"#lists","title":"Lists","text":"<p>Unordered</p> <ul> <li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li> <li>Sub-lists are made by indenting 2 spaces:<ul> <li>Marker character change forces new list start:<ul> <li>Ac tristique libero volutpat at</li> <li>Facilisis in pretium nisl aliquet</li> <li>Nulla volutpat aliquam velit</li> </ul> </li> </ul> </li> <li>Very easy!</li> </ul> <p>Ordered</p> <ol> <li>Lorem ipsum dolor sit amet</li> <li>Consectetur adipiscing elit</li> <li> <p>Integer molestie lorem at massa</p> </li> <li> <p>You can use sequential numbers...</p> </li> <li>...or keep all the numbers as <code>1.</code></li> </ol> <p>Start numbering with offset:</p> <ol> <li>foo</li> <li>bar</li> </ol>"},{"location":"#code","title":"Code","text":"<p>Inline <code>code</code></p> <p>Indented code</p> <pre><code>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n</code></pre> <p>Block code \"fences\"</p> <pre><code>Sample text here...\n</code></pre> <p>Syntax highlighting</p> <pre><code>var foo = function (bar) {\n    return bar++;\n};\n\nconsole.log(foo(5));\n</code></pre>"},{"location":"#tables","title":"Tables","text":"Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. <p>Right aligned columns</p> Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files."},{"location":"#links","title":"Links","text":"<p>link text</p> <p>link with title</p> <p>Autoconverted link https://github.com/nodeca/pica (enable linkify to see)</p>"},{"location":"#images","title":"Images","text":"<p>Like links, Images also have a footnote style syntax</p> <p></p> <p>With a reference later in the document defining the URL location:</p>"},{"location":"#plugins","title":"Plugins","text":"<p>The killer feature of <code>markdown-it</code> is very effective support of syntax plugins.</p>"},{"location":"#emojies","title":"Emojies","text":"<p>Classic markup: :wink: :cry: :laughing: :yum:</p> <p>Shortcuts (emoticons): :-) :-( 8-) ;)</p> <p>see how to change output with twemoji.</p>"},{"location":"#subscript-superscript","title":"Subscript / Superscript","text":"<ul> <li>19^th^</li> <li>H~2~O</li> </ul>"},{"location":"#_1","title":"\\ <p>++Inserted text++</p>","text":""},{"location":"#_2","title":"\\ <p>==Marked text==</p>","text":""},{"location":"#footnotes","title":"Footnotes <p>Footnote 1 link[^first].</p> <p>Footnote 2 link[^second].</p> <p>Inline footnote^[Text of inline footnote] definition.</p> <p>Duplicated footnote reference[^second].</p> <p>[^first]: Footnote can have markup</p> <pre><code>and multiple paragraphs.\n</code></pre> <p>[^second]: Footnote text.</p>","text":""},{"location":"#definition-lists","title":"Definition lists <p>Term 1</p> <p>: Definition 1 with lazy continuation.</p> <p>Term 2 with inline markup</p> <p>: Definition 2</p> <pre><code>    { some code, part of Definition 2 }\n\nThird paragraph of definition 2.\n</code></pre> <p>Compact style:</p> <p>Term 1 ~ Definition 1</p> <p>Term 2 ~ Definition 2a ~ Definition 2b</p>","text":""},{"location":"#abbreviations","title":"Abbreviations <p>This is HTML abbreviation example.</p> <p>It converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.</p> <p>*[HTML]: Hyper Text Markup Language</p>","text":""},{"location":"#custom-containers","title":"Custom containers <p>::: warning here be dragons :::</p>","text":""},{"location":"Knowledge/Tutorials/","title":"Tutorials","text":""},{"location":"Knowledge/Tutorials/#how-to-mlflow-setup","title":"How to MLFlow (+setup)","text":""},{"location":"Knowledge/Tutorials/#how-to-learn-90-of-git-in-2-hours","title":"How to learn 90% of git in 2 hours","text":""},{"location":"Knowledge/Tutorials/How%20to%20MLFlow%20%28%2Bsetup%29/","title":"How to setup MLFlow on DigitalOcean (STEP BY STEP)","text":"<p>MLFlow quickstart (youtube)</p> <p>MLFLow setup script (github)</p> <p>DigitalOcean gives 200$ for students, look more in Github Student pack</p> <ol> <li>"},{"location":"Knowledge/Tutorials/How%20to%20MLFlow%20%28%2Bsetup%29/#digitalocean-configuration","title":"DigitalOcean configuration","text":"<ol> <li>Setup SSH keys on DigitalOcean<ol> <li>Go to settings and find Security tab</li> <li>Go to \u201cAdd SSH Key\u201d</li> <li>Follow instructions on right side (save your passphrase somewhere, we need it later)</li> <li>Done with SSH keys!</li> </ol> </li> <li>Create Project<ol> <li>Click on \u201cNew Project\u201d at the left bar</li> <li>Enter name and choose purpose (choose one you want, not depends, but i prefer AI, its all about recommendations)</li> </ol> </li> <li>Configuring Droplet (skip options, if they are not mentioned)<ol> <li>Click on green \u201cCreate\u201d button on top and choose \u201cDroplets\u201d</li> <li>Choose closest region to you</li> <li>By default, there is Ubuntu 24.10 x64, if not, choose it</li> <li>For MLFlow we can choose Basic plan, with Regular config (Disk type: SSD) for $12</li> <li>Choose SSH key, you have created</li> <li>Give hostname for Droplet</li> <li>Choose your project and create droplet</li> </ol> </li> <li>Configuring S3<ol> <li>Click on \u201cCreate\u201d (where we chose Droplets), and click on \u201cSpaces Object Storage\u201d</li> <li>Click \u201cEnable CDN\u201d</li> <li>Give unique Bucket name</li> <li>Choose your project</li> <li>Create your Space Bucket (S3 storage)</li> </ol> </li> </ol>"},{"location":"Knowledge/Tutorials/How%20to%20MLFlow%20%28%2Bsetup%29/#connecting-to-droplet","title":"Connecting to Droplet","text":"<ol> <li>Go to your project and click on IP (E.g 67.182.42.230), it will copy IP to buffer</li> <li>Go to your terminal (on Windows - PowerShell), type ssh root@, paste ip after @ (E.g. <code>ssh root@67.182.42.230</code>), and click Enter</li> <li>First time, It will ask \u201cAre you sure you want to continue\u2026\u201d, type \u201cyes\u201d</li> <li>Next, It will ask for passphrase, type it and push enter, it will be asked every time you trying to connect. At this moment you should be successfully connected to your Droplet</li> </ol>"},{"location":"Knowledge/Tutorials/How%20to%20MLFlow%20%28%2Bsetup%29/#configuring-mlflow-server","title":"Configuring MLFlow Server","text":"<ol> <li>Go to https://github.com/mikitavydrankou/MLflow-server-ubuntu24 and copy link to project</li> <li>Git clone this script (<code>git clone https://github.com/mikitavydrankou/MLflow-server-ubuntu24.git</code>)</li> <li>Go to script directory \u2192 <code>cd MLflow-server-ubuntu24</code></li> <li>Copy template of env file \u2192 <code>cp .env.example .env</code></li> <li>Edit .env \u2192 <code>nano .env</code><ol> <li>You can leave variables that starts from PG_\u2026 2.<code>MLFLOW_BUCKET_NAME=</code><ol> <li>Pass your unique name of bucket</li> </ol> </li> <li><code>AWS_ACCESS_KEY_ID=</code><ol> <li>Go to DigitalOcean, find bucket you have created earlier and click on it</li> <li>Go to settings, scroll down and find \u201cAccess Keys\u201d</li> <li>Click on \u201cCreate Access Key\u201d</li> <li>Select \u201cLimited Access\u201d at \u201cSelect access scope\u201d</li> <li>Choose your bucket and change Permissions to \u201cRead/Write/Delete\u201d</li> <li>You can skip or give a name to your key</li> <li>Click on \u201cCreate Access Key\u201d</li> <li>Now you will see \u201cAccess key ID\u201d column. Copy this and pass to variable in .env (Don\u2019t reload page! Copy secret key!)</li> </ol> </li> <li><code>AWS_SECRET_ACCESS_KEY=</code><ol> <li>Paste your secret key to .env</li> </ol> </li> <li><code>MLFLOW_S3_ENDPOINT_URL=</code><ol> <li>Scroll upper and you will see bar with \u201cOrigin Endpoint\u201d and adress. Copy it</li> <li>Pass it to your .env and erase bucket name from address. E.g:<ol> <li>You copied https://your-bucket-name.fra1.digitaloceanspaces.com</li> <li>You should pass https://fra1.digitaloceanspaces.com</li> </ol> </li> </ol> </li> <li><code>MLFLOW_TRACKING_URI=</code><ol> <li>Go to your project, find your droplet and copy IP</li> <li>Pass it to .env. E.g<ol> <li>Before: MLFLOW_TRACKING_URI=http://:5000 <li>After: MLFLOW_TRACKING_URI=http://68.123.53.250:5000</li> <li>Click ctrl + x, type y, push enter. You done with .env</li> <li>Type <code>python3 [main.py](http://main.py)</code> and wait for installation, it should end without errors</li> <li>Type ./run_example.sh to start test experiment</li> <li> </li>"},{"location":"Knowledge/Tutorials/How%20to%20MLFlow%20%28%2Bsetup%29/#starting-with-mlflow","title":"Starting with MLFlow","text":"<ol> <li>Go to your browser and find <code>&lt;ip-of-your-droplet&gt;:5000</code> (MLFlow works on port 5000)</li> </ol>"}]}